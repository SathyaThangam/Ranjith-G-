import jwt from "jsonwebtoken";
import argon2 from "argon2";
const generateAccessToken = (data) => {
	return {
		accessToken: jwt.sign(data, process.env.ACCESS_TOKEN_SECRET),
	};
};

//Compares hash generated by argon
const compareHash = async (userPassword, storedPassword) => {
	try {
		return await argon2.verify(storedPassword, userPassword);
	} catch (err) {
		console.log(err);
		return err;
	}
};

const generateHash = async (password) => {
	try {
		return await argon2.hash(password);
	} catch (err) {
		console.log(err);
		return err;
	}
};

const validateEmail = (value) => {
	const re = /^\w+([\\.-]?\w+)*@\w+([\\.-]?\w+)*(\.\w{2,3})+$/;
	return re.test(value);
};

const validatePassword = (value) => {
	let re = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,16}$/;
	return re.test(value);
};

export {
	compareHash,
	generateHash,
	generateAccessToken,
	validateEmail,
	validatePassword,
};
